# Generated by Django 4.1.3 on 2022-11-28 13:42

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0006_rename_category_product_categories_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="ProductColor",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("code", models.CharField(max_length=255)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("path", models.CharField(max_length=255)),
                ("is_main", models.BooleanField(default=False)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ProductSize",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AlterField(
            model_name="product",
            name="status",
            field=models.CharField(
                choices=[("hot", "Hot"), ("sale", "Sale"), ("new", "New"), ("normal", "Normal")],
                default="normal",
                max_length=10,
            ),
        ),
        migrations.CreateModel(
            name="ProductModel",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("price", models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ("stock_quantity", models.IntegerField(default=0)),
                ("sale_quantity", models.IntegerField(default=0)),
                (
                    "product_color",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="core.productcolor"),
                ),
                ("product_size", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="core.productsize")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="productcolor",
            name="product_image",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="core.productimage"),
        ),
        migrations.AddField(
            model_name="product",
            name="product_colors",
            field=models.ManyToManyField(blank=True, to="core.productcolor"),
        ),
        migrations.AddField(
            model_name="product",
            name="product_images",
            field=models.ManyToManyField(blank=True, to="core.productimage"),
        ),
        migrations.AddField(
            model_name="product",
            name="product_models",
            field=models.ManyToManyField(blank=True, to="core.productmodel"),
        ),
        migrations.AddField(
            model_name="product",
            name="product_sizes",
            field=models.ManyToManyField(blank=True, to="core.productsize"),
        ),
    ]
